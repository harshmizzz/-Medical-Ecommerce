{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\mediacal_ecommerce\\\\src\\\\components\\\\Checkout\\\\TotalPrice\\\\TotalPrice.js\";\nimport React from 'react';\nimport './TotalPrice.css';\nimport CurrencyFormat from 'react-currency-format';\nimport { useStateValue } from '../../StateProvider/StateProvider';\nimport { getCartTotal } from '../../StateProvider/reducer';\nimport stripeCheckout from 'react-stripe-checkout';\nimport StripeCheckout from 'react-stripe-checkout';\n\nconst TotalPrice = () => {\n  const [{\n    cart\n  }, dispatch] = useStateValue();\n\n  const handleToken = (token, addresses) => {\n    console.log({\n      token,\n      addresses\n    });\n    alert(\"Cannot recognize your payment info. Please enter correct data to proceed further.\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"totalPrice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyFormat, {\n    renderText: value => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"totalPrice__items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"Total number of Items in your cart: \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 85\n      }\n    }, cart === null || cart === void 0 ? void 0 : cart.length)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"totalPrice__total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"Total Price of your items: \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 76\n      }\n    }, `${value}`))),\n    decimalScale: 2,\n    value: getCartTotal(cart),\n    displayType: \"text\",\n    thousandSeparator: true,\n    prefix: \"$\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"totalPrice__button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StripeCheckout, {\n    stripeKey: \"pk_test_51HJOaQLdoACKysu0wLwQumXY74LkQqXgEnlGlwVZ4YxqUYt4WbS0T5os1yPD4DYdSxGfLZZednPt3Lef3CiD6Eru00duSbZPBO\",\n    token: handleToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default TotalPrice;","map":{"version":3,"sources":["F:/Projects/mediacal_ecommerce/src/components/Checkout/TotalPrice/TotalPrice.js"],"names":["React","CurrencyFormat","useStateValue","getCartTotal","stripeCheckout","StripeCheckout","TotalPrice","cart","dispatch","handleToken","token","addresses","console","log","alert","value","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,kBAAP;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAEvB,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAWC,QAAX,IAAuBN,aAAa,EAA1C;;AAEA,QAAMO,WAAW,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAZ;AACAG,IAAAA,KAAK,CAAC,mFAAD,CAAL;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAEE,IAAA,UAAU,EAAGC,KAAD,iBACV,uDACE;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASR,IAAT,aAASA,IAAT,uBAASA,IAAI,CAAES,MAAf,CAAxE,CADF,eAEE;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAA+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAU,GAAED,KAAM,EAAlB,CAA/D,CAFF,CAHJ;AASE,IAAA,YAAY,EAAE,CAThB;AAUE,IAAA,KAAK,EAAEZ,YAAY,CAACI,IAAD,CAVrB;AAWE,IAAA,WAAW,EAAE,MAXf;AAYE,IAAA,iBAAiB,EAAE,IAZrB;AAaE,IAAA,MAAM,EAAE,GAbV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAiBE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAC,6GADZ;AAEE,IAAA,KAAK,EAAEE,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,CADF;AA0BD,CAnCD;;AAqCA,eAAeH,UAAf","sourcesContent":["import React from 'react';\r\n\r\nimport './TotalPrice.css';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useStateValue } from '../../StateProvider/StateProvider';\r\nimport { getCartTotal } from '../../StateProvider/reducer';\r\nimport stripeCheckout from 'react-stripe-checkout';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\n\r\nconst TotalPrice = () => {\r\n\r\n  const [{ cart }, dispatch] = useStateValue();\r\n\r\n  const handleToken = (token, addresses) => {\r\n    console.log({ token, addresses });\r\n    alert(\"Cannot recognize your payment info. Please enter correct data to proceed further.\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"totalPrice\">\r\n      <CurrencyFormat \r\n\r\n        renderText={(value) => (\r\n          <>\r\n            <span className=\"totalPrice__items\">Total number of Items in your cart: <strong>{cart?.length}</strong></span>\r\n            <span className=\"totalPrice__total\">Total Price of your items: <strong>{`${value}`}</strong></span>\r\n          </>\r\n        )}\r\n\r\n        decimalScale={2}\r\n        value={getCartTotal(cart)}\r\n        displayType={\"text\"}\r\n        thousandSeparator={true}\r\n        prefix={\"$\"}\r\n      />\r\n      {/* <button>Proceed to Payment</button> */}\r\n      <div className=\"totalPrice__button\">\r\n        <StripeCheckout \r\n          stripeKey=\"pk_test_51HJOaQLdoACKysu0wLwQumXY74LkQqXgEnlGlwVZ4YxqUYt4WbS0T5os1yPD4DYdSxGfLZZednPt3Lef3CiD6Eru00duSbZPBO\"\r\n          token={handleToken}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TotalPrice;"]},"metadata":{},"sourceType":"module"}